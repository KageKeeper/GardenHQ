@model GardenManager.Web.ViewModels.BedViewModel

<hr />
<h3>Build and Assign New Bed</h3>
@using (Ajax.BeginForm("Create", "Bed", null,
        new AjaxOptions
        {
            HttpMethod = "POST",
            UpdateTargetId = "ajax-content",
            OnSuccess = "OnModalSuccess"
        }, new { @id = "create-bed-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.GardenId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GardenId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Gardens.FirstOrDefault(x => x.Id == model.GardenId).Name, new { htmlAttributes = new { @class = "form-control", @disabled = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bed.Alias, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Bed.Alias, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bed.Alias, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Bed.Width, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Bed.Width, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bed.Width, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Bed.Length, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Bed.Length, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bed.Length, "", new { @class = "text-danger" })
            </div>
        </div>
        @*
            TODO: Currently, there is an issue in rendering the checkboxes correctly. This will be corrected in the near future
        *@
        @*<div class="form-group">
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.LabelFor(model => model.Bed.IsRaisedBed, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Bed.IsRaisedBed)
                        <i class="fa fa-square-o"></i>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <div class="checkbox">
                        <label class="control-label col-md-2">
                            Uses SFG Method
                            @Html.EditorFor(model => model.Bed.UsingSFG)
                            <i class="fa fa-square-o"></i>
                        </label>
                    </div>
                </div>
            </div>*@
    </div>
    <input type="submit" value="Save" id="submit-modal-form" class="btn btn-info" style="display: none;" />
}

